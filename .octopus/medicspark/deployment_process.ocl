step "notify-deployment-start" {
    name = "Notify deployment start"

    action {
        properties = {
            Octopus.Action.AutoRetry.MaximumCount = "3"
            Octopus.Action.AutoRetry.MinimumBackoff = "15"
            Octopus.Action.Template.Id = "ActionTemplates-461"
            Octopus.Action.Template.Version = "15"
            ssn_Channel = "#{Notification.Slack.Channel}"
            ssn_Color = "good"
            ssn_HookUrl = "#{Notification.Slack.Webhook}"
            ssn_IconUrl = "https://octopus.com/content/resources/favicon.png"
            ssn_Message = "#{Notification.Slack.Status.Message}"
            ssn_Title = "#{Notification.Slack.Status.DeploymentStarted.Title}"
            ssn_Username = "Octopus Deploy"
        }
        worker_pool = "hosted-ubuntu"
    }
}

step "manual-intervention-required" {
    name = "Deployment Approval in Staging"

    action "deployment-approval-in-staging" {
        action_type = "Octopus.Manual"
        environments = ["staging"]
        properties = {
            Octopus.Action.Manual.BlockConcurrentDeployments = "False"
            Octopus.Action.Manual.Instructions = "Approve this deployment?"
            Octopus.Action.Manual.ResponsibleTeamIds = "space-managers"
            Octopus.Action.RunOnServer = "false"
        }
    }
}

process_template "deploy-aws-resources" {
    name = "Deploy AWS resources"
    process_template_slug = "base-ec2-cloudformation-resources"
    version_mask = "4.X"

    parameter "PH.CF.Region" {
        value = "#{Tenant.AWS.Region}"
    }

    parameter "PH.CF.StackName" {
        value = "#{Project.AWS.StackName}"
    }

    parameter "PH.CF.ContainerFeed" {
        value = "Feeds-1357"
    }

    parameter "PH.CF.WorkerPool" {
        value = "#{Project.WorkerPool}"
    }

    parameter "PH.CF.AWSAccount" {
        value = "Project.AWS.Account"
    }
}

step "notify-deployment-status" {
    condition = "Always"
    name = "Notify deployment status"

    action {
        properties = {
            Octopus.Action.AutoRetry.MaximumCount = "3"
            Octopus.Action.AutoRetry.MinimumBackoff = "15"
            Octopus.Action.Template.Id = "ActionTemplates-461"
            Octopus.Action.Template.Version = "15"
            ssn_Channel = "#{Notification.Slack.Channel}"
            ssn_Color = "#{Notification.Slack.Color}"
            ssn_HookUrl = "#{Notification.Slack.Webhook}"
            ssn_IconUrl = "https://octopus.com/content/resources/favicon.png"
            ssn_Message = "#{Notification.Slack.Status.Message}"
            ssn_Title = "#{Notification.Slack.Status.Deployment.Title}"
            ssn_Username = "Octopus Deploy"
        }
        worker_pool = "hosted-ubuntu"
    }
}