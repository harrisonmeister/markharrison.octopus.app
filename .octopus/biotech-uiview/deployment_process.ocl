step "notify-deployment-start" {
    name = "Notify deployment start"

    action {
        is_disabled = true
        properties = {
            Octopus.Action.AutoRetry.MaximumCount = "3"
            Octopus.Action.AutoRetry.MinimumBackoff = "15"
            Octopus.Action.Template.Id = "ActionTemplates-461"
            Octopus.Action.Template.Version = "15"
            ssn_Channel = "#{Notification.Slack.Channel}"
            ssn_Color = "good"
            ssn_HookUrl = "#{Notification.Slack.Webhook}"
            ssn_IconUrl = "https://octopus.com/content/resources/favicon.png"
            ssn_Message = "#{Notification.Slack.Status.Message}"
            ssn_Title = "#{Notification.Slack.Status.DeploymentStarted.Title}"
            ssn_Username = "Octopus Deploy"
        }
        worker_pool = "hosted-ubuntu"
    }
}

step "deployment-approval" {
    name = "Deployment Approval in Staging"

    action "deployment-approval-in-staging" {
        action_type = "Octopus.Manual"
        environments = ["staging"]
        is_disabled = true
        properties = {
            Octopus.Action.Manual.BlockConcurrentDeployments = "False"
            Octopus.Action.Manual.Instructions = "Is this deployment to #{Octopus.Environment.Name} approved to be deployed?"
            Octopus.Action.Manual.ResponsibleTeamIds = "space-managers"
            Octopus.Action.RunOnServer = "false"
        }
    }
}

step "notify-deployment-status" {
    condition = "Always"
    name = "Notify deployment status"

    action {
        is_disabled = true
        properties = {
            Octopus.Action.AutoRetry.MaximumCount = "3"
            Octopus.Action.AutoRetry.MinimumBackoff = "15"
            Octopus.Action.Template.Id = "ActionTemplates-461"
            Octopus.Action.Template.Version = "15"
            ssn_Channel = "#{Notification.Slack.Channel}"
            ssn_Color = "#{Notification.Slack.Color}"
            ssn_HookUrl = "#{Notification.Slack.Webhook}"
            ssn_IconUrl = "https://octopus.com/content/resources/favicon.png"
            ssn_Message = "#{Notification.Slack.Status.Message}"
            ssn_Title = "#{Notification.Slack.Status.Deployment.Title}"
            ssn_Username = "Octopus Deploy"
        }
        worker_pool = "hosted-ubuntu"
    }
}

process_template "deploy-biotech-web" {
    name = "Deploy biotech web"
    process_template_slug = "deploy-package-process-with-approval"
    version_mask = "1.X"

    package_parameter "PH.PackageDeploy.Package" {
        feed = "octopus-server-built-in"
        package_id = "biotech-webapp"
    }

    parameter "PH.PackageDeploy.WorkerPool" {
        value = "WorkerPools-431"
    }

    parameter "PH.PackageDeploy.ApprovalEnvironments" {
        value = "Environments-422"
    }

    parameter "PH.PackageDeploy.TargetTags" {
        value = "biotech-web"
    }

    parameter "PH.PackageDeploy.Slack.Webhook" {
        value = "#{Notification.Slack.Webhook}"
    }
}