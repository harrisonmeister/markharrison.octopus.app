step "deployment-start" {
    name = "Deployment start"

    action {
        action_type = "Octopus.Script"
        properties = {
            Octopus.Action.Script.ScriptBody = "Write-Highlight \"Deployment starting\""
            Octopus.Action.Script.ScriptSource = "Inline"
            Octopus.Action.Script.Syntax = "PowerShell"
            OctopusUseBundledTooling = "False"
        }
        worker_pool = "hosted-ubuntu"
    }
}

step "manual-intervention-required" {
    name = "Manual Intervention Required"

    action {
        action_type = "Octopus.Manual"
        environments = ["test"]
        properties = {
            Octopus.Action.Manual.BlockConcurrentDeployments = "False"
            Octopus.Action.Manual.Instructions = "Approve this deployment?"
            Octopus.Action.Manual.ResponsibleTeamIds = "space-managers"
            Octopus.Action.RunOnServer = "false"
        }
    }
}

step "deploy-cf-template" {
    name = "Deploy CF Template"

    action {
        action_type = "Octopus.ProcessTemplate"
        properties = {
            Octopus.Action.ProcessTemplate.Reference.Commit = "2cd7b9d7acb6fa54fd445b07d59db2ce5094f1cd"
            Octopus.Action.ProcessTemplate.Reference.Slug = "base-ec2-cloudformation-resources"
            Octopus.Action.ProcessTemplate.Reference.Version = "0.0.2"
            Octopus.Action.ProcessTemplate.Reference.VersioningOption = "SpecifiedVersion"
            Octopus.Action.RunOnServer = "false"
            "Octopus.Step[Deploy AWS CloudFormation template].Action[Deploy AWS CloudFormation template].Container" = "{\"Image\":\"octopusdeploy/worker-tools:6.4.0-ubuntu.22.04\",\"FeedId\":\"Feeds-1357\",\"GitUrl\":null,\"Dockerfile\":null}"
            "Octopus.Step[Deploy AWS CloudFormation template].Action[Deploy AWS CloudFormation template].Properties[Octopus.Action.Aws.CloudFormationTemplateParameters]" = "[{\"ParameterKey\":\"EnvType\",\"ParameterValue\":\"#{Octopus.Environment.Name | ToLower}\"},{\"ParameterKey\":\"ImageAmi\",\"ParameterValue\":\"#{Project.AMI.ImageID}\"}]"
            "Octopus.Step[Deploy AWS CloudFormation template].Action[Deploy AWS CloudFormation template].Properties[Octopus.Action.Aws.CloudFormationTemplateParametersRaw]" = "[{\"ParameterKey\":\"EnvType\",\"ParameterValue\":\"#{Octopus.Environment.Name | ToLower}\"},{\"ParameterKey\":\"ImageAmi\",\"ParameterValue\":\"#{Project.AMI.ImageID}\"}]"
            "Octopus.Step[Deploy AWS CloudFormation template].Action[Deploy AWS CloudFormation template].Properties[Octopus.Action.AwsAccount.Variable]" = "Project.AWS.Account"
            "Octopus.Step[Deploy AWS CloudFormation template].Action[Deploy AWS CloudFormation template].WorkerPoolId" = "WorkerPools-431"
            PH.CF.Region = "#{Tenant.AWS.Region}"
            PH.CF.StackName = "#{Project.AWS.StackName}"
        }
        worker_pool_variable = ""
    }
}

step "run-a-script" {
    name = "Run a Script"

    action {
        action_type = "Octopus.Script"
        properties = {
            Octopus.Action.Script.ScriptBody = "Write-Host \"hey\""
            Octopus.Action.Script.ScriptSource = "Inline"
            Octopus.Action.Script.Syntax = "PowerShell"
            OctopusUseBundledTooling = "False"
        }
        worker_pool = "hosted-windows"
    }
}